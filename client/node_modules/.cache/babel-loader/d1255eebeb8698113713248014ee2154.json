{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lilijiaxin/Desktop/Code-Rena/client/src/components/arena.js\";\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable react/jsx-no-duplicate-props */\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Card, Form, ListGroup, CardGroup, InputGroup, FormControl } from 'react-bootstrap';\nlet clientRawText = '';\n\nlet playerFunc = () => {\n  console.log('player func is not defined yet');\n};\n\nlet box1 = document.getElementById('cli'); // const box1=document.getElementById('cli1')\n// const box2=document.getElementById('cli2')\n\nbox1.addEventListener('input', () => {\n  box1.value = clientRawText;\n});\n\nconst retrieveDepth = (arr, depth, idx = 1) => {\n  const output = [];\n  arr.forEach(el => {\n    if (Array.isArray(el) && depth > idx) {\n      output.push(...retrieveDepth(el, depth, ++idx));\n    } else if (!Array.isArray(el)) output.push(el);\n  });\n  return output;\n};\n\nlet correct = retrieveDepth;\n\nclass Arena extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '2rem 2rem auto 2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          style: {\n            margin: '1rem auto 1rem auto'\n          },\n          children: \"Algorithm title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          style: {\n            margin: '1rem auto 1rem auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Subtitle, {\n            className: \"mb-2 text-muted\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), ' ', \"Given an arbitrarily nested array of numbers and a positive integer \\\"depth\\\", return a new array consisting of the numbers with depth less than or equal to the provided depth, in order of appearance. The original array is considered to be at depth 1, and inner arrays are at greater depth.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          style: {\n            margin: '1rem auto 1rem auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Subtitle, {\n            className: \"mb-2 text-muted\",\n            children: \"Constraints and Examples\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), \"For example: retrieveDepth([2, [4, [7], 1], 5], 1) equal to [2, 5] because only the 2 and 5 are at \\\"depth 1\\\", and everything else is too deep. The 4 and 1 are at \\\"depth 2\\\", and the 7 is at \\\"depth 3\\\". retrieveDepth([2, [4, [7], 1], 5], 2) equal to [2, 4, 1, 5] because the 2 and 5 are at \\\"depth 1\\\", the 4 and 1 are at \\\"depth 2\\\", and the 7 is too deep because it's at \\\"depth 3\\\". retrieveDepth([2, [4, [7], 1], 5], 3) equal to [2, 4, 7, 1, 5] because every number is within \\\"depth 3\\\". No number is deeper.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '700px',\n            margin: '3rem auto 3rem auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Player One\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: \"Name of the Player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              style: {\n                marginBottom: '1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  children: \"Write you answer here\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: \"cli1\",\n                cols: 80,\n                rows: 20,\n                id: \"cli\",\n                size: \"2000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => {\n                eval('var playerFunc=' + clientRawText);\n                console.log('text: ' + clientRawText);\n\n                if (playerFunc !== undefined) {\n                  console.log(playerFunc([2, [4, [7], 1], 5], 1) === correct([2, [4, [7], 1], 5], 1));\n                }\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"light\",\n              children: \"Give Up!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '700px',\n            margin: '3rem auto 3rem auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Player Two\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n              className: \"mb-2 text-muted\",\n              children: \"Card Subtitle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              style: {\n                marginBottom: '1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                  children: \"Player Two is typing...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                as: \"textarea\",\n                rows: 15,\n                \"aria-label\": \"With textarea\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: \"Hide!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Arena;","map":{"version":3,"sources":["/Users/lilijiaxin/Desktop/Code-Rena/client/src/components/arena.js"],"names":["React","Component","Button","Card","Form","ListGroup","CardGroup","InputGroup","FormControl","clientRawText","playerFunc","console","log","box1","document","getElementById","addEventListener","value","retrieveDepth","arr","depth","idx","output","forEach","el","Array","isArray","push","correct","Arena","render","margin","display","flexDirection","width","marginBottom","eval","undefined"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable react/jsx-no-duplicate-props */\n\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Button,\n  Card,\n  Form,\n  ListGroup,\n  CardGroup,\n  InputGroup,\n  FormControl,\n} from 'react-bootstrap';\n\nlet clientRawText = '';\nlet playerFunc = () => {\n  console.log('player func is not defined yet');\n};\n\nlet box1 = document.getElementById('cli');\n// const box1=document.getElementById('cli1')\n// const box2=document.getElementById('cli2')\nbox1.addEventListener('input', () => {\n  box1.value = clientRawText;\n});\n\nconst retrieveDepth = (arr, depth, idx = 1) => {\n  const output = [];\n  arr.forEach((el) => {\n    if (Array.isArray(el) && depth > idx) {\n      output.push(...retrieveDepth(el, depth, ++idx));\n    } else if (!Array.isArray(el)) output.push(el);\n  });\n  return output;\n};\n\nlet correct = retrieveDepth;\n\nclass Arena extends Component {\n  render() {\n    return (\n      <div style={{ margin: '2rem 2rem auto 2rem' }}>\n        <Card>\n          <Card.Title style={{ margin: '1rem auto 1rem auto' }}>\n            Algorithm title\n          </Card.Title>\n        </Card>\n        <Card>\n          <Card.Body style={{ margin: '1rem auto 1rem auto' }}>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              Description\n            </Card.Subtitle>{' '}\n            Given an arbitrarily nested array of numbers and a positive integer\n            \"depth\", return a new array consisting of the numbers with depth\n            less than or equal to the provided depth, in order of appearance.\n            The original array is considered to be at depth 1, and inner arrays\n            are at greater depth.\n          </Card.Body>\n        </Card>\n        <Card>\n          <Card.Body style={{ margin: '1rem auto 1rem auto' }}>\n            <Card.Subtitle className=\"mb-2 text-muted\">\n              Constraints and Examples\n            </Card.Subtitle>\n            For example: retrieveDepth([2, [4, [7], 1], 5], 1) equal to [2, 5]\n            because only the 2 and 5 are at \"depth 1\", and everything else is\n            too deep. The 4 and 1 are at \"depth 2\", and the 7 is at \"depth 3\".\n            retrieveDepth([2, [4, [7], 1], 5], 2) equal to [2, 4, 1, 5] because\n            the 2 and 5 are at \"depth 1\", the 4 and 1 are at \"depth 2\", and the\n            7 is too deep because it's at \"depth 3\". retrieveDepth([2, [4, [7],\n            1], 5], 3) equal to [2, 4, 7, 1, 5] because every number is within\n            \"depth 3\". No number is deeper.\n          </Card.Body>\n        </Card>\n        {/* <textarea id='cli1' cols={80} rows={20} id='cli' size='2000'/>\n<textarea id='cli2' cols={80} rows={20} id='cli' size='2000'/> */}\n\n        <ListGroup style={{ display: 'flex', flexDirection: 'row' }}>\n          <Card style={{ width: '700px', margin: '3rem auto 3rem auto' }}>\n            <Card.Body>\n              <Card.Title>Player One</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                Name of the Player\n              </Card.Subtitle>\n              <InputGroup style={{ marginBottom: '1rem' }}>\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Write you answer here</InputGroup.Text>\n                </InputGroup.Prepend>\n                <textarea id=\"cli1\" cols={80} rows={20} id=\"cli\" size=\"2000\" />\n              </InputGroup>\n              <Button\n                variant=\"primary\"\n                onClick={() => {\n                  eval('var playerFunc=' + clientRawText);\n                  console.log('text: ' + clientRawText);\n                  if (playerFunc !== undefined) {\n                    console.log(\n                      playerFunc([2, [4, [7], 1], 5], 1) ===\n                        correct([2, [4, [7], 1], 5], 1)\n                    );\n                  }\n                }}\n              >\n                Submit\n              </Button>\n              <Button variant=\"light\">Give Up!</Button>\n            </Card.Body>\n          </Card>\n          <Card style={{ width: '700px', margin: '3rem auto 3rem auto' }}>\n            <Card.Body>\n              <Card.Title>Player Two</Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                Card Subtitle\n              </Card.Subtitle>\n              <InputGroup style={{ marginBottom: '1rem' }}>\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Player Two is typing...</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                  as=\"textarea\"\n                  rows={15}\n                  aria-label=\"With textarea\"\n                />\n              </InputGroup>\n              <Button variant=\"primary\">Hide!</Button>\n            </Card.Body>\n          </Card>\n        </ListGroup>\n      </div>\n    );\n  }\n}\n\nexport default Arena;\n"]},"metadata":{},"sourceType":"module"}