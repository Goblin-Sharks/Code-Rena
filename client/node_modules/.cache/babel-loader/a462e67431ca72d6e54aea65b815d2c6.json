{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lilijiaxin/Desktop/Code-Rena/client/src/components/signup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from '../user_actions/user_actions';\nimport { Form, Input, Button } from 'antd';\n\nfunction RegisterPage(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validationSchema: Yup.object().shape({\n      username: Yup.string().required('Name is required'),\n      password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let dataToSubmit = {\n          username: values.username,\n          password: values.password\n        };\n        dispatch(registerUser(dataToSubmit)).then(response => {\n          // response will be sent to the payload\n          if (response.payload.success) {\n            props.history.push('/login');\n          } else {\n            alert(response.payload.err.errmsg);\n          }\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    children: props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            minWidth: '375px'\n          },\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            required: true,\n            label: \"User Name\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"name\",\n              placeholder: \"Enter user name\",\n              type: \"text\",\n              value: values.name,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.name && touched.name ? 'text-input error' : 'text-input'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), errors.name && touched.name && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            required: true,\n            label: \"Password\",\n            hasFeedback: true,\n            validateStatus: errors.password && touched.password ? 'error' : 'success',\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              id: \"password\",\n              placeholder: \"Enter your password\",\n              type: \"password\",\n              value: values.password,\n              onChange: handleChange,\n              onBlur: handleBlur,\n              className: errors.password && touched.password ? 'text-input error' : 'text-input'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-feedback\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSubmit,\n              type: \"primary\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterPage, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/Users/lilijiaxin/Desktop/Code-Rena/client/src/components/signup.js"],"names":["React","Formik","Yup","useDispatch","registerUser","Form","Input","Button","RegisterPage","props","dispatch","username","password","object","shape","string","required","min","values","setSubmitting","setTimeout","dataToSubmit","then","response","payload","success","history","push","alert","err","errmsg","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","minWidth","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from '../user_actions/user_actions';\nimport { Form, Input, Button } from 'antd';\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{ username: '', password: '' }}\n      validationSchema={Yup.object().shape({\n        username: Yup.string().required('Name is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            username: values.username,\n            password: values.password,\n          };\n          dispatch(registerUser(dataToSubmit)).then((response) => {\n            // response will be sent to the payload\n            if (response.payload.success) {\n              props.history.push('/login');\n            } else {\n              alert(response.payload.err.errmsg);\n            }\n          });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} onSubmit={handleSubmit}>\n              <Form.Item required label=\"User Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter user name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item\n                required\n                label=\"Password\"\n                hasFeedback\n                validateStatus={\n                  errors.password && touched.password ? 'error' : 'success'\n                }\n              >\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  onClick={handleSubmit}\n                  type=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\nexport default RegisterPage;\n"]},"metadata":{},"sourceType":"module"}