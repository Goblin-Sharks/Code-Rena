{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport inherits from './util/inherits';\nimport isAbsent from './util/isAbsent';\nimport isSchema from './util/isSchema';\nimport printValue from './util/printValue';\nimport MixedSchema from './mixed';\nimport { array as locale } from './locale';\nimport runTests from './util/runTests';\nexport default ArraySchema;\n\nfunction ArraySchema(type) {\n  var _this = this;\n\n  if (!(this instanceof ArraySchema)) return new ArraySchema(type);\n  MixedSchema.call(this, {\n    type: 'array'\n  }); // `undefined` specifically means uninitialized, as opposed to\n  // \"no subtype\"\n\n  this._subType = undefined;\n  this.innerType = undefined;\n  this.withMutation(function () {\n    _this.transform(function (values) {\n      if (typeof values === 'string') try {\n        values = JSON.parse(values);\n      } catch (err) {\n        values = null;\n      }\n      return this.isType(values) ? values : null;\n    });\n\n    if (type) _this.of(type);\n  });\n}\n\ninherits(ArraySchema, MixedSchema, {\n  _typeCheck: function _typeCheck(v) {\n    return Array.isArray(v);\n  },\n  _cast: function _cast(_value, _opts) {\n    var _this2 = this;\n\n    var value = MixedSchema.prototype._cast.call(this, _value, _opts); //should ignore nulls here\n\n\n    if (!this._typeCheck(value) || !this.innerType) return value;\n    var isChanged = false;\n    var castArray = value.map(function (v, idx) {\n      var castElement = _this2.innerType.cast(v, _extends({}, _opts, {\n        path: (_opts.path || '') + \"[\" + idx + \"]\"\n      }));\n\n      if (castElement !== v) {\n        isChanged = true;\n      }\n\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  },\n  _validate: function _validate(_value, options, callback) {\n    var _this3 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var errors = [];\n    var sync = options.sync;\n    var path = options.path;\n    var innerType = this.innerType;\n\n    var endEarly = this._option('abortEarly', options);\n\n    var recursive = this._option('recursive', options);\n\n    var originalValue = options.originalValue != null ? options.originalValue : _value;\n\n    MixedSchema.prototype._validate.call(this, _value, options, function (err, value) {\n      if (err) {\n        if (endEarly) return void callback(err);\n        errors.push(err);\n        value = err.value;\n      }\n\n      if (!recursive || !innerType || !_this3._typeCheck(value)) {\n        callback(errors[0] || null, value);\n        return;\n      }\n\n      originalValue = originalValue || value; // #950 Ensure that sparse array empty slots are validated\n\n      var tests = new Array(value.length);\n\n      var _loop = function _loop(idx) {\n        var item = value[idx];\n        var path = (options.path || '') + \"[\" + idx + \"]\"; // object._validate note for isStrict explanation\n\n        var innerOptions = _extends({}, options, {\n          path: path,\n          strict: true,\n          parent: value,\n          index: idx,\n          originalValue: originalValue[idx]\n        });\n\n        tests[idx] = function (_, cb) {\n          return innerType.validate ? innerType.validate(item, innerOptions, cb) : cb(null);\n        };\n      };\n\n      for (var idx = 0; idx < value.length; idx++) {\n        _loop(idx);\n      }\n\n      runTests({\n        sync: sync,\n        path: path,\n        value: value,\n        errors: errors,\n        endEarly: endEarly,\n        tests: tests\n      }, callback);\n    });\n  },\n  _isPresent: function _isPresent(value) {\n    return MixedSchema.prototype._isPresent.call(this, value) && value.length > 0;\n  },\n  of: function of(schema) {\n    var next = this.clone();\n    if (schema !== false && !isSchema(schema)) throw new TypeError('`array.of()` sub-schema must be a valid yup schema, or `false` to negate a current sub-schema. ' + 'not: ' + printValue(schema));\n    next._subType = schema;\n    next.innerType = schema;\n    return next;\n  },\n  min: function min(_min, message) {\n    message = message || locale.min;\n    return this.test({\n      message: message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min: _min\n      },\n      test: function test(value) {\n        return isAbsent(value) || value.length >= this.resolve(_min);\n      }\n    });\n  },\n  max: function max(_max, message) {\n    message = message || locale.max;\n    return this.test({\n      message: message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max: _max\n      },\n      test: function test(value) {\n        return isAbsent(value) || value.length <= this.resolve(_max);\n      }\n    });\n  },\n  ensure: function ensure() {\n    var _this4 = this;\n\n    return this.default(function () {\n      return [];\n    }).transform(function (val, original) {\n      // We don't want to return `null` for nullable schema\n      if (_this4._typeCheck(val)) return val;\n      return original == null ? [] : [].concat(original);\n    });\n  },\n  compact: function compact(rejector) {\n    var reject = !rejector ? function (v) {\n      return !!v;\n    } : function (v, i, a) {\n      return !rejector(v, i, a);\n    };\n    return this.transform(function (values) {\n      return values != null ? values.filter(reject) : values;\n    });\n  },\n  describe: function describe() {\n    var base = MixedSchema.prototype.describe.call(this);\n    if (this.innerType) base.innerType = this.innerType.describe();\n    return base;\n  }\n});","map":{"version":3,"sources":["/Users/lilijiaxin/Desktop/Code-Rena/client/node_modules/yup/es/array.js"],"names":["_extends","inherits","isAbsent","isSchema","printValue","MixedSchema","array","locale","runTests","ArraySchema","type","_this","call","_subType","undefined","innerType","withMutation","transform","values","JSON","parse","err","isType","of","_typeCheck","v","Array","isArray","_cast","_value","_opts","_this2","value","prototype","isChanged","castArray","map","idx","castElement","cast","path","_validate","options","callback","_this3","errors","sync","endEarly","_option","recursive","originalValue","push","tests","length","_loop","item","innerOptions","strict","parent","index","_","cb","validate","_isPresent","schema","next","clone","TypeError","min","_min","message","test","name","exclusive","params","resolve","max","_max","ensure","_this4","default","val","original","concat","compact","rejector","reject","i","a","filter","describe","base"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport inherits from './util/inherits';\nimport isAbsent from './util/isAbsent';\nimport isSchema from './util/isSchema';\nimport printValue from './util/printValue';\nimport MixedSchema from './mixed';\nimport { array as locale } from './locale';\nimport runTests from './util/runTests';\nexport default ArraySchema;\n\nfunction ArraySchema(type) {\n  var _this = this;\n\n  if (!(this instanceof ArraySchema)) return new ArraySchema(type);\n  MixedSchema.call(this, {\n    type: 'array'\n  }); // `undefined` specifically means uninitialized, as opposed to\n  // \"no subtype\"\n\n  this._subType = undefined;\n  this.innerType = undefined;\n  this.withMutation(function () {\n    _this.transform(function (values) {\n      if (typeof values === 'string') try {\n        values = JSON.parse(values);\n      } catch (err) {\n        values = null;\n      }\n      return this.isType(values) ? values : null;\n    });\n\n    if (type) _this.of(type);\n  });\n}\n\ninherits(ArraySchema, MixedSchema, {\n  _typeCheck: function _typeCheck(v) {\n    return Array.isArray(v);\n  },\n  _cast: function _cast(_value, _opts) {\n    var _this2 = this;\n\n    var value = MixedSchema.prototype._cast.call(this, _value, _opts); //should ignore nulls here\n\n\n    if (!this._typeCheck(value) || !this.innerType) return value;\n    var isChanged = false;\n    var castArray = value.map(function (v, idx) {\n      var castElement = _this2.innerType.cast(v, _extends({}, _opts, {\n        path: (_opts.path || '') + \"[\" + idx + \"]\"\n      }));\n\n      if (castElement !== v) {\n        isChanged = true;\n      }\n\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  },\n  _validate: function _validate(_value, options, callback) {\n    var _this3 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var errors = [];\n    var sync = options.sync;\n    var path = options.path;\n    var innerType = this.innerType;\n\n    var endEarly = this._option('abortEarly', options);\n\n    var recursive = this._option('recursive', options);\n\n    var originalValue = options.originalValue != null ? options.originalValue : _value;\n\n    MixedSchema.prototype._validate.call(this, _value, options, function (err, value) {\n      if (err) {\n        if (endEarly) return void callback(err);\n        errors.push(err);\n        value = err.value;\n      }\n\n      if (!recursive || !innerType || !_this3._typeCheck(value)) {\n        callback(errors[0] || null, value);\n        return;\n      }\n\n      originalValue = originalValue || value; // #950 Ensure that sparse array empty slots are validated\n\n      var tests = new Array(value.length);\n\n      var _loop = function _loop(idx) {\n        var item = value[idx];\n        var path = (options.path || '') + \"[\" + idx + \"]\"; // object._validate note for isStrict explanation\n\n        var innerOptions = _extends({}, options, {\n          path: path,\n          strict: true,\n          parent: value,\n          index: idx,\n          originalValue: originalValue[idx]\n        });\n\n        tests[idx] = function (_, cb) {\n          return innerType.validate ? innerType.validate(item, innerOptions, cb) : cb(null);\n        };\n      };\n\n      for (var idx = 0; idx < value.length; idx++) {\n        _loop(idx);\n      }\n\n      runTests({\n        sync: sync,\n        path: path,\n        value: value,\n        errors: errors,\n        endEarly: endEarly,\n        tests: tests\n      }, callback);\n    });\n  },\n  _isPresent: function _isPresent(value) {\n    return MixedSchema.prototype._isPresent.call(this, value) && value.length > 0;\n  },\n  of: function of(schema) {\n    var next = this.clone();\n    if (schema !== false && !isSchema(schema)) throw new TypeError('`array.of()` sub-schema must be a valid yup schema, or `false` to negate a current sub-schema. ' + 'not: ' + printValue(schema));\n    next._subType = schema;\n    next.innerType = schema;\n    return next;\n  },\n  min: function min(_min, message) {\n    message = message || locale.min;\n    return this.test({\n      message: message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min: _min\n      },\n      test: function test(value) {\n        return isAbsent(value) || value.length >= this.resolve(_min);\n      }\n    });\n  },\n  max: function max(_max, message) {\n    message = message || locale.max;\n    return this.test({\n      message: message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max: _max\n      },\n      test: function test(value) {\n        return isAbsent(value) || value.length <= this.resolve(_max);\n      }\n    });\n  },\n  ensure: function ensure() {\n    var _this4 = this;\n\n    return this.default(function () {\n      return [];\n    }).transform(function (val, original) {\n      // We don't want to return `null` for nullable schema\n      if (_this4._typeCheck(val)) return val;\n      return original == null ? [] : [].concat(original);\n    });\n  },\n  compact: function compact(rejector) {\n    var reject = !rejector ? function (v) {\n      return !!v;\n    } : function (v, i, a) {\n      return !rejector(v, i, a);\n    };\n    return this.transform(function (values) {\n      return values != null ? values.filter(reject) : values;\n    });\n  },\n  describe: function describe() {\n    var base = MixedSchema.prototype.describe.call(this);\n    if (this.innerType) base.innerType = this.innerType.describe();\n    return base;\n  }\n});"]},"metadata":{},"sourceType":"module"}