{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport Tooltip from '../tooltip';\nimport useCombinedRefs from '../_util/hooks/useCombinedRefs';\nvar SliderTooltip = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var visible = props.visible;\n  var innerRef = React.useRef(null);\n  var tooltipRef = useCombinedRefs(ref, innerRef);\n  var rafRef = React.useRef(null);\n\n  function cancelKeepAlign() {\n    window.cancelAnimationFrame(rafRef.current);\n    rafRef.current = null;\n  }\n\n  function keepAlign() {\n    rafRef.current = window.requestAnimationFrame(function () {\n      tooltipRef.current.forcePopupAlign();\n      rafRef.current = null;\n      keepAlign();\n    });\n  }\n\n  React.useEffect(function () {\n    if (visible) {\n      keepAlign();\n    } else {\n      cancelKeepAlign();\n    }\n\n    return cancelKeepAlign;\n  }, [visible]);\n  return /*#__PURE__*/React.createElement(Tooltip, _extends({\n    ref: tooltipRef\n  }, props));\n});\nexport default SliderTooltip;","map":{"version":3,"sources":["/Users/lilijiaxin/Desktop/Code-Rena/client/node_modules/antd/es/slider/SliderTooltip.js"],"names":["_extends","React","Tooltip","useCombinedRefs","SliderTooltip","forwardRef","props","ref","visible","innerRef","useRef","tooltipRef","rafRef","cancelKeepAlign","window","cancelAnimationFrame","current","keepAlign","requestAnimationFrame","forcePopupAlign","useEffect","createElement"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,gCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,IAAIC,aAAa,GAAG,aAAaH,KAAK,CAACI,UAAN,CAAiB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACtE,MAAIC,OAAO,GAAGF,KAAK,CAACE,OAApB;AACA,MAAIC,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa,IAAb,CAAf;AACA,MAAIC,UAAU,GAAGR,eAAe,CAACI,GAAD,EAAME,QAAN,CAAhC;AACA,MAAIG,MAAM,GAAGX,KAAK,CAACS,MAAN,CAAa,IAAb,CAAb;;AAEA,WAASG,eAAT,GAA2B;AACzBC,IAAAA,MAAM,CAACC,oBAAP,CAA4BH,MAAM,CAACI,OAAnC;AACAJ,IAAAA,MAAM,CAACI,OAAP,GAAiB,IAAjB;AACD;;AAED,WAASC,SAAT,GAAqB;AACnBL,IAAAA,MAAM,CAACI,OAAP,GAAiBF,MAAM,CAACI,qBAAP,CAA6B,YAAY;AACxDP,MAAAA,UAAU,CAACK,OAAX,CAAmBG,eAAnB;AACAP,MAAAA,MAAM,CAACI,OAAP,GAAiB,IAAjB;AACAC,MAAAA,SAAS;AACV,KAJgB,CAAjB;AAKD;;AAEDhB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,YAAY;AAC1B,QAAIZ,OAAJ,EAAa;AACXS,MAAAA,SAAS;AACV,KAFD,MAEO;AACLJ,MAAAA,eAAe;AAChB;;AAED,WAAOA,eAAP;AACD,GARD,EAQG,CAACL,OAAD,CARH;AASA,SAAO,aAAaP,KAAK,CAACoB,aAAN,CAAoBnB,OAApB,EAA6BF,QAAQ,CAAC;AACxDO,IAAAA,GAAG,EAAEI;AADmD,GAAD,EAEtDL,KAFsD,CAArC,CAApB;AAGD,CA/BgC,CAAjC;AAgCA,eAAeF,aAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport Tooltip from '../tooltip';\nimport useCombinedRefs from '../_util/hooks/useCombinedRefs';\nvar SliderTooltip = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var visible = props.visible;\n  var innerRef = React.useRef(null);\n  var tooltipRef = useCombinedRefs(ref, innerRef);\n  var rafRef = React.useRef(null);\n\n  function cancelKeepAlign() {\n    window.cancelAnimationFrame(rafRef.current);\n    rafRef.current = null;\n  }\n\n  function keepAlign() {\n    rafRef.current = window.requestAnimationFrame(function () {\n      tooltipRef.current.forcePopupAlign();\n      rafRef.current = null;\n      keepAlign();\n    });\n  }\n\n  React.useEffect(function () {\n    if (visible) {\n      keepAlign();\n    } else {\n      cancelKeepAlign();\n    }\n\n    return cancelKeepAlign;\n  }, [visible]);\n  return /*#__PURE__*/React.createElement(Tooltip, _extends({\n    ref: tooltipRef\n  }, props));\n});\nexport default SliderTooltip;"]},"metadata":{},"sourceType":"module"}