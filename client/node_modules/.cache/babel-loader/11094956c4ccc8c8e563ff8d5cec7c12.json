{"ast":null,"code":"export function asCallback(promise, callback) {\n  promise.then(function (result) {\n    return callback(null, result);\n  }, callback);\n}\nexport var once = function once(cb) {\n  var fired = false;\n  return function () {\n    if (fired) return;\n    fired = true;\n    cb.apply(void 0, arguments);\n  };\n};\nexport function parallel(fns, cb) {\n  var callback = once(cb);\n  var count = fns.length;\n\n  if (count === 0) {\n    return void callback(null, []);\n  }\n\n  var results = new Array(count);\n\n  var _loop = function _loop(i) {\n    var idx = i;\n    var fn = fns[i];\n    fn(function (err, value) {\n      if (err) return callback(err);\n      results[idx] = value;\n      if (--count <= 0) callback(null, results);\n    });\n  };\n\n  for (var i = 0; i < fns.length; i++) {\n    _loop(i);\n  }\n}\nexport function settled(fns, cb) {\n  var callback = once(cb);\n  var count = fns.length;\n\n  if (count === 0) {\n    return void callback(null, []);\n  }\n\n  var results = new Array(fns.length);\n\n  var _loop2 = function _loop2(i) {\n    var idx = i;\n    var fn = fns[i];\n    fn(function (err, value) {\n      results[idx] = err ? {\n        fulfilled: false,\n        value: err\n      } : {\n        fulfilled: true,\n        value: value\n      };\n      if (--count <= 0) callback(null, results);\n    });\n  };\n\n  for (var i = 0; i < fns.length; i++) {\n    _loop2(i);\n  }\n}","map":{"version":3,"sources":["/Users/lilijiaxin/Desktop/Code-Rena/client/node_modules/yup/es/util/async.js"],"names":["asCallback","promise","callback","then","result","once","cb","fired","apply","arguments","parallel","fns","count","length","results","Array","_loop","i","idx","fn","err","value","settled","_loop2","fulfilled"],"mappings":"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","sourcesContent":["export function asCallback(promise, callback) {\n  promise.then(function (result) {\n    return callback(null, result);\n  }, callback);\n}\nexport var once = function once(cb) {\n  var fired = false;\n  return function () {\n    if (fired) return;\n    fired = true;\n    cb.apply(void 0, arguments);\n  };\n};\nexport function parallel(fns, cb) {\n  var callback = once(cb);\n  var count = fns.length;\n\n  if (count === 0) {\n    return void callback(null, []);\n  }\n\n  var results = new Array(count);\n\n  var _loop = function _loop(i) {\n    var idx = i;\n    var fn = fns[i];\n    fn(function (err, value) {\n      if (err) return callback(err);\n      results[idx] = value;\n      if (--count <= 0) callback(null, results);\n    });\n  };\n\n  for (var i = 0; i < fns.length; i++) {\n    _loop(i);\n  }\n}\nexport function settled(fns, cb) {\n  var callback = once(cb);\n  var count = fns.length;\n\n  if (count === 0) {\n    return void callback(null, []);\n  }\n\n  var results = new Array(fns.length);\n\n  var _loop2 = function _loop2(i) {\n    var idx = i;\n    var fn = fns[i];\n    fn(function (err, value) {\n      results[idx] = err ? {\n        fulfilled: false,\n        value: err\n      } : {\n        fulfilled: true,\n        value: value\n      };\n      if (--count <= 0) callback(null, results);\n    });\n  };\n\n  for (var i = 0; i < fns.length; i++) {\n    _loop2(i);\n  }\n}"]},"metadata":{},"sourceType":"module"}